# Generated by Django 3.1.4 on 2021-03-29 05:22

import Appointment.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(max_length=200)),
                ('area', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('contact_1', models.CharField(max_length=15)),
                ('contact_2', models.CharField(blank=True, default='NA', max_length=15)),
            ],
            options={
                'verbose_name_plural': 'Address',
                'db_table': 'Address',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appoint_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('location', models.CharField(blank=True, default=None, max_length=30)),
                ('event', models.CharField(max_length=30)),
                ('event_duration', models.TimeField()),
                ('appoint_status', models.BooleanField(blank=True, default=True)),
                ('payment_status', models.CharField(blank=True, choices=[('FPD', 'Full Payment Done'), ('BPD', 'Booking Payment Done'), ('PD', 'Payment Due')], default=None, max_length=30)),
                ('address_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.address')),
            ],
            options={
                'verbose_name_plural': 'Appointment',
                'db_table': 'Appointment',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Event_Types',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=50)),
                ('estimated_price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name_plural': 'Event_Types',
                'db_table': 'Event_Types',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('date_added', models.DateField(auto_created=True)),
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image_name', models.CharField(max_length=30)),
                ('category', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('size', models.CharField(max_length=10)),
                ('image_format', models.CharField(max_length=10)),
                ('resolution', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100)),
                ('image_upload', models.ImageField(default='', upload_to=Appointment.models.Images.user_based_upload_to)),
                ('views', models.IntegerField(blank=True, default=0)),
                ('likes', models.IntegerField(blank=True, default=0)),
                ('status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], max_length=15)),
            ],
            options={
                'verbose_name_plural': 'Image',
                'db_table': 'Image',
            },
        ),
        migrations.CreateModel(
            name='Location_Details',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Location_Details',
                'db_table': 'Location_Details',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateField(blank=True, default=None)),
                ('order_time', models.TimeField(blank=True, default=None)),
                ('Total_Amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('InCart', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'Order',
                'db_table': 'Order',
            },
        ),
        migrations.CreateModel(
            name='Payment_Details',
            fields=[
                ('pay_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('card_no', models.CharField(max_length=50)),
                ('card_holder_name', models.CharField(blank=True, default=None, max_length=50)),
                ('expiry_date', models.DateField(blank=True, default=None)),
            ],
            options={
                'verbose_name_plural': 'Payment_Details',
                'db_table': 'Payment_Details',
            },
        ),
        migrations.CreateModel(
            name='Photographer',
            fields=[
                ('photographer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.CharField(max_length=15)),
                ('speciality', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Photographer',
                'db_table': 'Photographer',
            },
        ),
        migrations.CreateModel(
            name='State_Details',
            fields=[
                ('state_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'State_Details',
                'db_table': 'State_Details',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'db_table': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_contributor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User_Details',
            fields=[
                ('date_created', models.DateField(auto_created=True)),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('address_id', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='Appointment.address')),
                ('userobj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User_Details',
                'db_table': 'User_Details',
            },
        ),
        migrations.CreateModel(
            name='Tag_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.image')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.tags')),
            ],
            options={
                'verbose_name_plural': 'Tag_Link',
                'db_table': 'Tag_Link',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_date_time', models.DateField(auto_created=True)),
                ('pay_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('payment_mode', models.CharField(choices=[('DC', 'Full Payment Done'), ('CC', 'Credit Card'), ('U', 'UPI')], max_length=20)),
                ('description', models.CharField(blank=True, default=None, max_length=100)),
                ('payment_status', models.CharField(max_length=10)),
                ('appoint_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.appointment')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.order')),
                ('pay_details_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.payment_details')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.user_details')),
            ],
            options={
                'verbose_name_plural': 'Payment',
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='Order_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.image')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.order')),
            ],
            options={
                'verbose_name_plural': 'Order Details',
                'db_table': 'Order_Details',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.user_details'),
        ),
        migrations.AddField(
            model_name='image',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.user_details'),
        ),
        migrations.CreateModel(
            name='Contributor_Payment_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('image_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.image')),
                ('pay_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.payment')),
            ],
            options={
                'verbose_name_plural': 'Contributor_Payment_Details',
                'db_table': 'Contributor_Payment_Details',
            },
        ),
        migrations.CreateModel(
            name='City_Details',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=30)),
                ('state_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.state_details')),
            ],
            options={
                'verbose_name_plural': 'City_Details',
                'db_table': 'City_Details',
            },
        ),
        migrations.CreateModel(
            name='Area_Details',
            fields=[
                ('area_id', models.AutoField(primary_key=True, serialize=False)),
                ('area_name', models.CharField(max_length=30)),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.city_details')),
            ],
            options={
                'verbose_name_plural': 'Area_Details',
                'db_table': 'Area_Details',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='photographer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.photographer'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Appointment.user_details'),
        ),
    ]
